let Container;(Container=function(t,e,n,i){if(!(this instanceof Container))return new Container(...arguments);if(t instanceof Container)return t;let r=pen.slice(arguments);for(let t=0,e=r.length;t<e;t++)if("object"===pen.type(r[t])){i=r[t];break}return(null==e||pen.empty(e))&&(e=pen.cc(t)),(null==n||pen.empty(n))&&(n="div"),this.cont=pen(`<${n} class="${t}" id="${e}">`),null!=i&&this.cont.attr(i),this.els=[],this}).deleteDocs=function(t){return delete t._documentize,t},Container.prototype={get id(){return this.cont.attr("id")},set id(t){this.cont.attr("id",t)},get class(){return this.cont.attr("class")},set class(t){this.cont.attr("class",t)},get length(){return this.els.length},_setup(t){let e=this;return(t=this.cont.create(t,"child"))._documentize=function(n){if("string"===pen.type(n)){!1!==pen.empty(name)&&console.warn("argument musn't be empty"),e.els.push({name:name,id:e.length,el:t,initiated:!1});for(let t,n=0,i=e.length;n<i;n++)t=e.els[n],e.initiate(t);Container.deleteDocs(t)}return Container.deleteDocs(t),t},t},_cre(t){if("array"===pen.type(t)){let e=[];for(let n=0,i=t.length;n<i;n++)e.push(this._setup(t[n]));return e}return t=this.cont.create(t,"child"),t=this._setup(t)},initiate(t){return t.initiate||(this[`${t.name}Cre`]=t.el,t.initiate=!0),t},create(t,e=!1){return e?new Promise((e,n)=>{try{e(this._cre(t))}catch(t){n(t)}}):this._cre(t)},find(t,e,n=!1){let i;for(let n=0,r=this.length;n<r;n++)if(this.els[n][t]===e){i=this.els[n];break}return n?new Prom(t=>{null!=i?t(i):rej(new Error(`Couldn't find ${e}`))}):null!=i?i:null},remove(t,e,n=!1){if(n)this.find(t,e,n).then(t=>{this.els.splice(t.id,1)}).catch(console.error);else{let i=this.find(t,e,n);if(null==i)throw new Error(`Couldn't remove ${e}`);this.els.splice(i.id,1)}return this},desroy(t){switch(null!=t){case!0:this.el.appendTo(t);break;default:this.el.remove(!0)}return this},toString(){return`<Container ${this.cont.selector}${0!==this.length?`, Els:${this.length}`:""}>`},append(...t){for(let e,n=0,i=t.length;n<i;n++)e=e instanceof Container?e.cont:e,this.cont.append(e);return this},appendTo(t){return this.cont.appendTo(t),this}};