// Generated by CoffeeScript 2.0.0-alpha1
(function() {
  var Card, Modal, Start, body, buttons, cntmnu, commands, dir, error, head, headerst, loader, log, txt;
  log = console.log, error = console.error, dir = console.dir;
  body = document.body, head = document.head;
  Card = class Card {
    constructor(title, message) {
      this.container = pen("div").Class("card-container").pesh;
      this.titleContainer = pen("div").Class("card-title-container");
      this.messageContainer = pen("div").Class("card-message-container").pesh;
      this.message = pen("span").Class("card-message").Html(title !== null ? title : '').pesh;
      this.title = pen("span").Class("card-title").Html(message !== null ? message : '').pesh;
      pen(this.titleContainer).Append(this.title);
      pen(this.messageContainer).Append(this.message);
      pen(this.container).Append(this.titleContainer, this.messageContainer);
      return this;
    }

    setTitle(str) {
      return pen(this.title).Html(str).pesh;
    }

    setMessage(str) {
      return pen(this.message).Html(str).pesh;
    }

    Style(el, stroobj) {
      return pen(this[el]).Css(stroobj).pesh;
    }

  };
  Modal = class Modal {
    constructor(headstr, bodystr, footstr) {
      var Remove;
      this.container = pen("div").Class("modal-container");
      this.head = pen("div").Class("modal-head");
      this.body = pen("div").Class("modal-body");
      this.foot = pen("div").Class("modal-foot");
      this.closebtn = pen("span").Class("close-button").Html("X");
      Remove = function(e) {
        pen(this.container).Remove();
        pen(this.closebtn).removeEventListener("click", Remove);
      };
      pen(this.closebtn).On("click", Remove);
      this.headText = pen("h2").Class("modal-head-text").Html(headerstr !== null ? headerstr : '');
      this.bodyText = pen("p").Class("modal-body-text").Html(bodystr !== null ? bodystr : '');
      this.footText = pen("h2").Class("modal-foot-text").Html(footstr !== null ? footstr : '');
      return this;
    }

  };
  commands = {};
  buttons = {};
  txt = pen("p").Html("loading...").returnElement();
  loader = pen("div").Class("loader").Append(txt).AppendTo(body).returnElement();
  cntmnu = function(e) {
    var Remove, addCommand, cntmn, removeCommand;
    e.preventDefault();
    cntmn = pen("div").Class("contextmenu").Css({
      top: `${e.clientY}px`,
      left: `${e.clientX}px`
    }).returnElement();
    addCommand = function(view, event) {
      commands[view] = {
        el: pen("span").Html(view).Class("contextmenu-command").On("click", event).returnElement(),
        hr: pen("hr").Class("contextmenu-divider").returnElement()
      };
      pen(cntmn).Append(commands[view].el, commands[view].hr);
      return addCommand;
    };
    removeCommand = function(name) {
      pen(commands[name].el).Remove();
      pen(commands[name].hr).Remove();
      delete commands[name];
      return removeCommand;
    };
    Remove = function() {
      var name;
      for (name in commands) {
        removeCommand(name);
      }
      pen(cntmn).Remove();
      window.removeEventListener("click", Remove);
    };
    window.addEventListener("click", Remove);
    addCommand("reload", function() {
      return location.reload();
    });
    pen(cntmn).AppendTo(body);
    return cntmn;
  };
  headerst = function() {
    var addButton, brs, header, i, j, removeButton, title;
    header = pen("div").Class("header-title").returnElement();
    title = pen("span").Class("title").Html(document.title).returnElement();
    addButton = function(view, fn) {
      buttons[view] = {
        el: pen("span").Class("header-button Ril").Html(view).On("click", fn).returnElement()
      };
      pen(header).Append(buttons[view].el);
    };
    removeButton = function(name) {
      pen(buttons[name]).Remove();
      return delete buttons[name];
    };
    pen(header).Append(title).AppendTo(body);
    brs = [];
    for (i = j = 0; j <= 4; i = ++j) {
      brs[i] = pen("br").returnElement();
    }
    log(brs);
    pen(body).Append(brs[0], brs[1], brs[2], brs[3], brs[4]);
    addButton("X", function() {
      return close();
    });
    addButton("reload", function() {
      return location.reload();
    });
  };
  Start = function(e) {
    var a, lorem;
    window.addEventListener("contextmenu", cntmnu);
    headerst();
    a = pen("a").attr("href", "http://www.google.com").Class("body-button").Html("moose").returnElement().outerHTML;
    lorem = pen("pre").Html(`Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nUt enim ad minim veniam, quis ${a} exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n`.repeat(20)).returnElement();
    pen(body).Append(lorem);
    pen(loader).Remove();
    return log(`load took ${Math.round(e.timeStamp)} second(s)`);
  };
  return window.onload = Start;
})();
